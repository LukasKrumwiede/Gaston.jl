var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"Author = \"Miguel Bazdresch\"","category":"page"},{"location":"#Gaston.jl-1","page":"Home","title":"Gaston.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston is a Julia package for plotting. It provides an interface to gnuplot, a mature and powerful plotting package available on all major platforms.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using Gaston, SpecialFunctions\nset(reset=true) # hide\nset(mode=\"ijulia\")  # hide\nset(size=\"500,400\")  # hide\nset(font=\"Consolas 9\")  # hide\nx = y = 0:0.075:10;\npostcomm = \"set view 45,45; set pm3d lighting primary .5 specular .4\"\nsurf(x, y, (x,y)->besselj0(y)*x^2, plotstyle=\"pm3d\", gpcom=postcomm)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(Image inspired by What's new in gnuplot 5.2?)","category":"page"},{"location":"#Package-features-1","page":"Home","title":"Package features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Why use Gaston, when there are modern, powerful alternatives such as Plots.jl and MakiE.jl? These are some Gaston features that may be attractive to you:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Gaston can plot:\nUsing graphical windows, and keeping multiple plots active at a time, with mouse interaction\nDirectly to the REPL, using text (ASCII) or sixels\nIn Jupyter and Juno\nSupports popular 2-D plots: regular function plots, stem, step, histograms, images, etc.\nSupports surface, contour and heatmap 3-D plots.\nCan save plots to multiple formats, including pdf, png and svg.\nProvides a simple interface for knowledgeable users to access gnuplot features not exposed by Gaston.\nFast: time to load package, plot, and save to pdf is around five seconds.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Gaston's philosophy is that plotting to the screen should be fast and non-ugly. Publication-quality plots are the domain of TiKZ and pgfplots.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Knowledge of gnuplot is not required. Users familiar with gnuplot, however, will be able to take advantage of Gaston's facilities to access the (vast) feature set not directly exposed by Gaston.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston supports Julia version 1.1, and requires Gnuplot version 5.0 or above (version 5.2 is recommended). To install Gaston from the Julia REPL, run","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> ]add Gaston","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Typing ] switches the Julia REPL to the package manager, and the add command installs the package. To exit the package manager, hit the backspace key.","category":"page"},{"location":"#gnuplot-configuration-1","page":"Home","title":"gnuplot configuration","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston respects user configuration settings in gnuplot's startup file. Left un-configured, gnuplot's plots are less than attractive. The following minimum configuration is suggested (and was used to generate the plots in this document):","category":"page"},{"location":"#","page":"Home","title":"Home","text":"set linetype 1 lc rgb \"blue\" pt 3\nset linetype 2 lc rgb \"red\" pt 4\nset linetype 3 lc rgb \"green\" pt 6\nset linetype 4 lc rgb \"black\" pt 12\nset linetype 5 lc rgb \"blue\" pt 5\nset linetype 6 lc rgb \"red\" pt 1\nset linetype 7 lc rgb \"green\" pt 2\nset linetype 8 lc rgb \"black\" pt 7\nset linetype cycle 8\nset style data lines\nset key noautotitle\nset auto fix\nset offsets graph .05, graph .05, graph .05, graph .05","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The configuration file is ~/.gnuplot in Unix-like systems, and %APPDATA%\\GNUPLOT.INI in Windows.","category":"page"},{"location":"#Next-steps-1","page":"Home","title":"Next steps","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Load Gaston into your Julia session with","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using Gaston","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Simple plots can be generated with the plot command:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"plot(1:10,title=\"A simple plot\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Several examples of different plotting types are given in the Examples section below.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The Settings and Configuration section includes a list of all available configuration options.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The Usage notes and FAQ section includes additional usage examples and answers frequent questions.","category":"page"},{"location":"#Running-tests-1","page":"Home","title":"Running tests","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston includes an extensive test suite, which you can execute with:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> ]test Gaston","category":"page"},{"location":"#","page":"Home","title":"Home","text":"All tests should pass.","category":"page"},{"location":"#Compatibility-notes-1","page":"Home","title":"Compatibility notes","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston is developed in Linux, and that is where it is better supported. However, running in Julia means that it is mostly compatible with any system where Julia runs. Some known differences are listed below.","category":"page"},{"location":"#A-note-on-Windows-1","page":"Home","title":"A note on Windows","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Gaston runs on Windows and care is taken that all tests pass. However, currently stream communication (which Gaston relies on) is very slow in Windows; so, you can expect some plot commands to take a few seconds to complete. See this thread on Discourse for more information.","category":"page"},{"location":"#A-note-on-OS-X-1","page":"Home","title":"A note on OS X","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Recent versions of OSX removed support for the aqua terminal from gnuplot. Before attempting to use aqua in Gaston, open a terminal and run this command:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"$ gnuplot -e \"set term\" | grep aqua","category":"page"},{"location":"#","page":"Home","title":"Home","text":"If nothing is printed, then you do not have support for the aqua terminal and should not attempt to use it in Gaston. By default, Gaston uses the qt terminal. You can verify if your version of gnuplot supports it by issuing","category":"page"},{"location":"#","page":"Home","title":"Home","text":"gnuplot -e \"set term\" | grep qt","category":"page"},{"location":"#","page":"Home","title":"Home","text":"A further alternative is to revert to the x11 terminal with:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"set_terminal(\"x11\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"x11 is a fallback terminal with less bells and whistles than qt, wxt or aqua.","category":"page"},{"location":"#Support-for-Julia-v0.6-1","page":"Home","title":"Support for Julia v0.6","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The current version of Gaston requires Julia 1.1. The last version of Gaston that is compatible with Julia v0.6 is 0.7.4. Note that this version of Gaston is unsuppo","category":"page"},{"location":"#Bloat-watch-1","page":"Home","title":"Bloat watch","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The number of lines includes comments and empty lines.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"tics = \"\"\"set xtics rotate (\"0.1\" 1, \"0.2\" 2, \"0.3\" 3, \"0.4\" 4, \"0.5.1\" 5, \"0.5.2\" 6, \"0.5.3\" 7, \"0.5.4\" 8, \"0.5.5\" 9, \"0.5.6\" 10, \"0.5.7\" 11, \"0.6\" 12, \"0.7\" 13, \"0.7.1\" 14, \"0.7.2\" 15, \"0.7.3\" 16, \"0.7.4\" 17, \"0.9.0\" 18, \"0.9.1\" 19, \"0.9.2\" 20, \"0.10.0\" 21)\"\"\"\nlc=[754,836,1196,1575,2301,2301,2343,2342,2352,2262,2262,2297,1314,1318,1362,1363,1424,1488,1382,1418,1417]\nbar(lc,xlabel=\"Gaston version\",ylabel=\"Lines of code\",\n    boxwidth=\"0.8 relative\", linecolor=\"turquoise\",\n    title=\"Bloat Watch\",gpcom=tics)","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Author = \"Miguel Bazdresch\"","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Gaston can create 2-D plots, including regular function plots, plots with logarithmic axes, scatter, stem and step plots, bar plots and histograms, and images.","category":"page"},{"location":"2dplots/#D-plots-1","page":"2-D Plots","title":"2-D plots","text":"","category":"section"},{"location":"2dplots/#plot-and-plot!-commands-1","page":"2-D Plots","title":"plot and plot! commands","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"To plot a vector y against a vector x, use the command plot(x,y).","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"using Gaston # hide\nset(reset=true) # hide\nset(mode=\"ijulia\") # hide\nset(size=\"500,300\") # hide\nnothing # hide\nt = 0:0.01:1\nplot(t, sin.(2Ï€*5*t))","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"To add a second curve, use plot!:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot!(t,cos.(2Ï€*5*t))","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Curves are added to a figure one by one; the first curve is plotted with plot, and the rest with succesive plot! commands.","category":"page"},{"location":"2dplots/#Plot-configuration-1","page":"2-D Plots","title":"Plot configuration","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Many plot properties can be configured. These properties are divided in axes properties (grid, axes labels, etc) and curve properties (color, line style, point type, etc). See the full list in Settings and Configuration.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Note that many of the configuration options follow gnuplot's syntax, and are specified as strings (even if they are numerical).","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The axes configuration can be provided as arguments to plot:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sin.(2Ï€*10*t),\n    title=\"Sine wave\", grid=\"on\", xlabel=\"Time(s)\", ylabel=\"Amplitude (V)\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Curve properties can be mixed with axes properties:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sin.(2Ï€*3*t),\n    linewidth=\"2\", linecolor=\"red\", pointtype=\"ecircle\", plotstyle=\"linespoints\",\n    linestyle=\"-.-\", xlabel=\"Time(s)\", ylabel=\"Amplitude (V)\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"In plots with multiple curves, the axes must be configured with the first plot command; plot! only allows configuration of the respective curve.","category":"page"},{"location":"2dplots/#Legends-1","page":"2-D Plots","title":"Legends","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Legends can be added with keyoptions and legend:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -5:0.01:5\nplot(t, sinc.(t), keyoptions=\"box top left\", legend=\"Sinc(t)\")","category":"page"},{"location":"2dplots/#Setting-the-background-1","page":"2-D Plots","title":"Setting the background","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The background can also be configured:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -5:0.01:5\nplot(t, sinc.(t), linecolor=\"yellow\", linewidth=\"3\", background=\"blue\")","category":"page"},{"location":"2dplots/#Ranges-1","page":"2-D Plots","title":"Ranges","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Ranges can be specified with xrange and yrange:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -5:0.01:5\nplot(t, sinc.(t), xrange=\"[-5:*]\", yrange=\"[-1:1.5]\")","category":"page"},{"location":"2dplots/#Plot-the-y0-and-x0-axes-1","page":"2-D Plots","title":"Plot the y=0 and x=0 axes","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"A neat gnuplot feature exposed by Gaston is the ability to plot the y=0 and x=0 axes:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -5:0.01:5\nplot(t, sinc.(t.+1), xzeroaxis=\"on\", yzeroaxis=\"on\")","category":"page"},{"location":"2dplots/#Font-and-font-size-1","page":"2-D Plots","title":"Font and font size","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The font and font size can be set with font:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sinc.(t), font=\"Consolas, 12\")","category":"page"},{"location":"2dplots/#Plot-size-1","page":"2-D Plots","title":"Plot size","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The plot size can be controlled with size. (Be careful to use the correct units for your chosen terminal).","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sinc.(t), size=\"200,200\")","category":"page"},{"location":"2dplots/#Advanced-configuration-with-gpcom-1","page":"2-D Plots","title":"Advanced configuration with gpcom","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Although Gaston does not expose all of gnuplot's capabilities, arbitrary gnuplot commands can be specified using the gpcom argument to plot. This string is passed to gnuplot right before the plot command is issued. An example is a custom tics specification:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -5:0.01:5\nplot(t,sinc.(t),gpcom=\"set xtics -5,2,5; set ytics 0,0.5,1\")","category":"page"},{"location":"2dplots/#Setting-default-values-1","page":"2-D Plots","title":"Setting default values","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Default values can be configured with the set command. For example,","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"set(linewidth=\"5\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"will cause all subsequent curves to be plotted using a line width of 5. However, properties set in plot arguments override the default properties.","category":"page"},{"location":"2dplots/#Logarithmic-plots-1","page":"2-D Plots","title":"Logarithmic plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The axes can be configured to have a logarithmic scale, using axis=semilogy, semilogx, or loglog.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sin.(2Ï€*10*t) ,axis=\"semilogx\",\n    xlabel=\"log(time)\", ylabel=\"Amplitude\", grid=\"on\")","category":"page"},{"location":"2dplots/#Scatter-plots-1","page":"2-D Plots","title":"Scatter plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"A scatter plot can be generated with the scatter command:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"c = 2rand(1000).-1 .+ im*(2rand(1000).-1)\np = filter(x->abs(x)<1, c)\nscatter(real(p), imag(p), pointtype=\"fsquare\",pointsize=\"0.25\",\n        gpcom=\"set object ellipse at 0,0 size 2,2\",\n        title=\"Random points within the unit circle\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Besides the standard pointtypes, any UTF-8 character may be used:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"scatter(randn(30), randn(30), pointtype=\"Î»\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Behind the scenes, scatter calls plot with the points plotstyle.","category":"page"},{"location":"2dplots/#Stem-plots-1","page":"2-D Plots","title":"Stem plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Stem plots make it obvious one is plotting a discrete-time signal. The stem command replicates the behavior of stem in Matlab, Octave, et al:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -2:0.06:2\nstem(t, sin.(2Ï€*t),pointsize=\"0.75\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"By default, the line color is blue and the lines are made sligthly thicker. If only the vertical lines (\"impulses\") are desired, pass the option onlyimpulses=true to stem:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"stem(t, sin.(2Ï€*t), onlyimpulses=true)","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Behind the scenes, stem calls plot with the impulses plotstyle, followed (if onlyimpulses == true) by a call to plot! with the points plotstyle and the pointtype set to ecircle.","category":"page"},{"location":"2dplots/#Step-plots-1","page":"2-D Plots","title":"Step plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"In step plots, data points are joined with a horizontal line. There are three variants: steps, fsteps, and fillsteps.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"t = -2:0.06:2\nplot(t, sin.(2Ï€*t), plotstyle=\"steps\", title=\"Steps plot\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sin.(2Ï€*t), plotstyle=\"fillsteps\",\n     fillstyle=\"solid 0.5\", title=\"Fillsteps plot\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The color can be specified with fillcolor:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"plot(t, sin.(2Ï€*t), plotstyle=\"fillsteps\",\n     fillstyle=\"solid 0.75\", fillcolor=\"plum\", title=\"Fillsteps plot\")","category":"page"},{"location":"2dplots/#Bar-plots-1","page":"2-D Plots","title":"Bar plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Bar plots can be generated with the bar command:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"year = range(1985, length=20);\ndata = 0.5 .- rand(20)\nbar(year, data, gpcom=\"set xtics rotate\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Behind the scenes, bar uses gnuplot's boxes plotstyle. The bars' width, color and fillstyle can be controlled:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"bar(year, data, gpcom=\"set xtics rotate\", legend=\"Random number\",\n    keyoptions = \"box under\", boxwidth=\"0.66\",\n    fillstyle=\"pattern 2\", fillcolor=\"dark-goldenrod\")","category":"page"},{"location":"2dplots/#Histograms-1","page":"2-D Plots","title":"Histograms","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"To plot histograms, use the histogram command. This command takes the same properties as bar. In addition, histogram accepts a bins parameter, used to specify the number of bins, and a norm parameter that can be used to normalize the area under the histogram.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"histogram(rand(10000), bins=15, norm=1, title=\"Histogram\", yrange=\"[0:1.8]\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"It is of course possible to use histogram (or any other plot command) along with plot! to produce different kinds of plots in the same figure:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"x = -5:0.05:5\ndata = randn(10000)\ngaussian = @. exp(-x^2/2)/sqrt(2Ï€)\nset(keyoptions=\"box top left\")\nhistogram(data,bins=25,norm=1,\n          legend=\"Experimental\",linecolor=\"turquoise\",boxwidth=\"0.8 relative\",\n          title=\"Experimental and Theoretical Gaussian distributions\")\nplot!(x,gaussian,linecolor=\"black\",legend=\"Theoretical\")","category":"page"},{"location":"2dplots/#Images-1","page":"2-D Plots","title":"Images","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The command to plot an image is imagesc. It can plot a scaled or RGB image, depending on whether the provided coordinates are an array with two or with three dimensions. This command takes the properties title, xlabel, ylabel, xrange and yrange. In addition, RGB images can take a parameter clim, which must be a two-element array, and which is used to scale the image values.","category":"page"},{"location":"2dplots/#Scaled-image-1","page":"2-D Plots","title":"Scaled image","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"A scaled image is a plot of a matrix whose elements are interpreted as colors.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"set(keyoptions=\"\") #hide\nZ = [5 4 3 1 0; 2 2 0 0 1; 0 0 0 1 0; 0 1 2 4 3]\nimagesc(Z, title=\"Simple scaled image\")","category":"page"},{"location":"2dplots/#RGB-image-1","page":"2-D Plots","title":"RGB image","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"An RGB image is a plot of a 3-D matrix whose elements are interpreted as the red, green, and blue components of each image pixel.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"R = [x+y for x=0:5:120, y=0:5:120]\nG = [x+y for x=0:5:120, y=120:-5:0]\nB = [x+y for x=120:-5:0, y=0:5:120]\nZ = zeros(25,25,3)\nZ[:,:,1] = R\nZ[:,:,2] = G\nZ[:,:,3] = B\nimagesc(Z, title=\"RGB Image\", clim=[10,200], xrange=\"[1:25]\", yrange=\"[1:25]\")","category":"page"},{"location":"2dplots/#Plotting-with-financial-and-error-bars-1","page":"2-D Plots","title":"Plotting with financial and error bars","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"Gaston supports plotting using financial and error bars.","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"y = [i+rand() for i=1:0.3:8]\nopen=y.-0.1*rand(length(y));\nclose=open.+1;\nlow=open.-1;\nhigh=open.+1.5;\nfin = Gaston.FinancialCoords(open,low,high,close)\nplot(y, financial=fin,\n    title=\"Example of financial bars\",plotstyle=\"financebars\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"x = 0:2:50\ny = @. 2.5x/(5.67+x)^2\nerr = Gaston.ErrorCoords(0.05*rand(length(x)))\nplot(x,y,err=err,title=\"Example of error lines\",plotstyle=\"errorlines\")","category":"page"},{"location":"2dplots/#Saving-plots-1","page":"2-D Plots","title":"Saving plots","text":"","category":"section"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"To save a plot (or \"print\" it, in gnuplot's parlance), use the printfigure command:","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"printfigure(term=\"png\", font=\"Consolas,10\", size=\"1280,900\",\n            linewidth=\"1\", background=\"gray\", outputfile=\"myfigure.png\")","category":"page"},{"location":"2dplots/#","page":"2-D Plots","title":"2-D Plots","text":"The outputfile argument is required; by default the figure is saved in pdf format.","category":"page"},{"location":"3dplots/#D-plots-1","page":"3-D Plots","title":"3-D plots","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"Gaston can plot 3-D surfaces using the surf command; it accepts the same properties as plot, but it adds zlabel and semilogz axis properties, and a pm3d plotstyle. In addition, surf! allows plotting multiple surfaces in the same figure, and contour can display simple contour maps.","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"These commands require vector x and y coordinates. The z coordinate can be passed explicitly (as a matrix), or as a function.","category":"page"},{"location":"3dplots/#Explicit-x,-y-and-z-coordinates-1","page":"3-D Plots","title":"Explicit x, y and z coordinates","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The first way to obtain a 3-D plot is by giving explicit x, y and z coordinates to surf.","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"using Gaston # hide\nset(mode=\"ijulia\") # hide\nset(size=\"500,400\") # hide\nnothing # hide\nx=[0,1,2,3]\ny=[0,1,2]\nZ=[10 10 10; 10 5 10; 10 1 10; 10 0 10]\nsurf(x, y, Z, title = \"3D: Valley of the Gnu from gnuplot manual\")","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The default plostyle is to plot a mesh with points joined by lines, as seen above.","category":"page"},{"location":"3dplots/#z-coordinates-defined-by-a-function-1","page":"3-D Plots","title":"z coordinates defined by a function","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"Alternatively, a function may be provided that takes the x, y coordinates as arguments and returns a z coordinate.","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"x = y = -15:0.33:15\nsurf(x, y, (x,y)->sin.(sqrt.(x.*x+y.*y))./sqrt.(x.*x+y.*y),\n    title=\"Sombrero\", plotstyle=\"pm3d\")","category":"page"},{"location":"3dplots/#Plotting-multiple-surfaces-with-surf!-1","page":"3-D Plots","title":"Plotting multiple surfaces with surf!","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The equivalent to plot! is surf!:","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"x = y = -10:0.5:10\nsurf(x, y, (x,y)->2sin.(sqrt.(x.*x+y.*y))./sqrt(x.*x+y.*y)-2,\n    title=\"Two 3D plots in a single figure\",\n    plotstyle=\"lines\", linecolor=\"magenta\", gpcom=\"unset colorbox\")\nsurf!(x,y,(x,y)->cos.(x/2).*sin.(y/2)+3,plotstyle=\"pm3d\")","category":"page"},{"location":"3dplots/#Changing-the-palette-1","page":"3-D Plots","title":"Changing the palette","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The palette of a 3-D plot with pm3d plotstyle can be controlled with the palette setting.","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"surf(x, y, (x,y)->sin.(sqrt(x.*x+y.*y))./sqrt.(x.*x+y.*y),\n     title=\"Sombrero\", plotstyle=\"pm3d\", palette=\"gray\")","category":"page"},{"location":"3dplots/#Plotting-contours-1","page":"3-D Plots","title":"Plotting contours","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"Gnuplot's contour support is quite flexible. Currently, Gaston exposes just basic contour functionality with little room for configuration.","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"A contour for the current surface can be plot using gpcom=\"set contour base\":","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"gp = \"set contour base; unset key\"\nsurf(x, y, (x,y)->5cos.(x/2).*sin.(y/2), font=\",10\", gpcom=gp)","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The contour command plots just the contour lines, not the surface:","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"x = y = -5:0.1:5;\ncontour(x, y, (x,y)->5cos.(x/2).*sin.(y/2))","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"The labels can be disabled if labels=false is passed as an argument:","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"contour(x, y, (x,y)->5cos.(x/2).*sin.(y/2), labels=false)","category":"page"},{"location":"3dplots/#Plotting-heatmaps-1","page":"3-D Plots","title":"Plotting heatmaps","text":"","category":"section"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"Gaston does not expose a direct interface for plotting heatmaps, but these are easily achieved by setting gnuplot's view to map using gpcom:","category":"page"},{"location":"3dplots/#","page":"3-D Plots","title":"3-D Plots","text":"surf(x, y, (x,y)->cos.(x/2).*sin.(y/2), plotstyle=\"pm3d\", gpcom=\"set view map\")","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Author = \"Miguel Bazdresch\"","category":"page"},{"location":"settings/#Settings-and-Configuration-1","page":"Settings and Configuration","title":"Settings and Configuration","text":"","category":"section"},{"location":"settings/#Setting-the-terminal-1","page":"Settings and Configuration","title":"Setting the terminal","text":"","category":"section"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"In gnuplot parlance, the \"terminal\" is the device that renders a plot. While the terminal can be configured in gnuplot's initialization file (e.g. ~/.gnuplot), it is highly recommended to configure the terminal in Gaston, unless you know very well what you are doing.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"To set the terminal, run set(terminal=\"term name\"). The default terminal is qt.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Advanced users may want to further refine their terminal configuration. To do this, set the configuration option termopts. This defines a string that is passed to gnuplot at the end of the set term line. For example, if you need a non-enhanced terminal, run `set(termopts=\"noenhanced\").","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"The available terminals for plotting are:","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Terminal Purpose\nqt gnuplot's most advanced graphical terminal\nwxt older, also very capable graphical terminal\naqua for Apple users\nx11 barebones, fallback graphical terminal\ndumb plot to the REPL using ASCII\nsixelgd plot to the REPL using sixels","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"For more information on plotting with sixels, see this discourse thread.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Note that, in Jupyter and Juno, the terminal is locked to a special mode that outputs plots as SVG text. The terminal cannot be changed in these environments.","category":"page"},{"location":"settings/#Saving-figures-1","page":"Settings and Configuration","title":"Saving figures","text":"","category":"section"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"The terminals available for printing (saving) are pdf, eps, svg, png and gif. The following options, if set, will be used by printfigure when saving a plot:","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Property Purpose Allowed values Default setable\nprint_term Terminal to use for saving See above pdf âœ“\nprint_font Font to use when saving \"Font,size\" \"\" âœ“\nprint_size Size of saved figure \"x,y\" \"\" âœ“\nprint_linewidth Linewidth of all lines A number in quotes, e.g. \"2\" \"\" âœ“\nprint_background Background color A valid color, e.g. \"cyan\" \"\" âœ“\nprint_outputfile Output file name Any string None âœ—","category":"page"},{"location":"settings/#Setting-a-figure's-properties-1","page":"Settings and Configuration","title":"Setting a figure's properties","text":"","category":"section"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"All settings are applied in the following order, in increasing order of precedence:","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Gnuplot init file\nOptions set with set\nOptions given in a plot command","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Options set with the set command affect all future plots. Options given in a plot command affect only that plot.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"There are three kinds of configuration options: axes properties, curve properties, and print (save) properties. Axes properties affect the entire figure; curve properties are individual for each plot in the figure. Print properties only affect saving a figure to a file.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"For many properties, the default value can be changed using set(property=value). When a property is set to \"\", gnuplot will use its default value (possibly set in its initialization file).","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Gaston's configuration can be reset by running set(reset=true).","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Except when indicated otherwise, all values are strings.","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"See gnuplot's documentation for details of property options and syntax.","category":"page"},{"location":"settings/#Supported-axes-properties-1","page":"Settings and Configuration","title":"Supported axes properties","text":"","category":"section"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"You may configure the following axes properties:","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Property Purpose Allowed values Default setable\ntitle Plot title Any string \"\" âœ—\nxlabel X axis label Any string \"\" âœ—\nylabel Y axis label Any string \"\" âœ—\nzlabel Z axis label Any string \"\" âœ—\naxis Change axis scaling \"semilogy\", \"semilogx\", or \"loglog\" \"\" âœ“\ngrid Show a grid \"on\" or a valid grid setting, e.g. \"noxtics\" \"\" âœ“\n{x,y,z}range X axis limits A valid range, e.g. \"[-3:2]\" \"\" âœ“\nkeyoptions Control key (legends) placement A valid key setting, e.g. \"box top left\" \"\" âœ“\nfillstyle Style for filled curves A valid fill style, e.g. \"solid 0.5\" \"\" âœ“\nboxwidth Box witdh in box plots A valid boxwidth setting, e.g. \"0.5 relative\" \"\" âœ“\n{x,y,z}zeroaxis Draw a line along the selected axis \"on\" or a valid zeroaxis setting \"\" âœ“\npalette Colors for pm3d style A valid palette name, e.g. \"gray\" \"\" âœ“\nonlyimpulses Configure stem plots true or false false âœ“\nfont Plot font A valid font spec, e.g. \"Consolas,10\" \"\" âœ“\nsize Plot size A valid size spec, e.g. \"800,600\" \"\" âœ“\nlinewidth Linewidth multiplier A number in quotes, e.g. \"3\" \"\" âœ“\nbackground Plot background color A valid color, e.g. \"cyan\" \"\" âœ“","category":"page"},{"location":"settings/#Supported-curve-properties-1","page":"Settings and Configuration","title":"Supported curve properties","text":"","category":"section"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"You may configure the following curve properties:","category":"page"},{"location":"settings/#","page":"Settings and Configuration","title":"Settings and Configuration","text":"Property Purpose Allowed values Default setable\n\"plotstyle\" Select plot style One of \"lines\", \"linespoints\", \"points\", \"impulses\", \"boxes\", \"errorlines\", \"errorbars\", \"dots\", \"steps\", \"fsteps\", \"fillsteps\", \"financebars\" \"\" âœ“\nlegend Curve description Any string \"\" âœ“\nlinecolor Line color A valid color, e.g. \"red\" \"\" âœ“\nlinewidth Line width A number in quotes, e.g. \"2\" \"\" âœ“\nlinestyle Select more complex lines A string containing a combination of -, ., _ and <space>; empty string plots solid lines \"\" âœ“\npointsize Marker size A number in quotes, e.g. \"2\" \"\" âœ“\npointtype Marker style One of \"\", +, x, *, esquare, fsquare, ecircle, fcircle, etrianup, ftrianup, etriandn, ftriandn, edmd, fdmd \"\" âœ“\nfillcolor Color for filled curves A valid color, e.g. \"red\" \"\" âœ“\nfillstyle Style for filled curves A valid fill style, e.g. \"solid 0.5\" \"\" âœ“","category":"page"},{"location":"notes/#Usage-notes-and-FAQ-1","page":"Usage Notes and FAQ","title":"Usage notes and FAQ","text":"","category":"section"},{"location":"notes/#How-to-keep-multiple-plots-(figures)-on-screen-at-a-time?-1","page":"Usage Notes and FAQ","title":"How to keep multiple plots (figures) on screen at a time?","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"When using the graphical terminals qt, wxt, aqua (on Mac) or x11, Gaston can keep an unlimited number of \"figures\" open on screen at the same time. Each figure is identified by a unique handle; handles are integers larger than 0.","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"The following commands are provided to help create, select and close figures:","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"figure(): creates a new figure with the smallest available handle; returns the handle number.\nfigure(h): if a figure with handle h exists, select it; otherwise, create it.\nclosefigure(): close and delete the most recently used figure.\nclosefigure(h): close and delete figure with handle h.\ncloseall(): close all figures.","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"All plot commands take a handle as optional argument to indicate the figure where the plot action will be taken. As an example, assume there are three figures with handles 1, 2 and 3. Then, the command","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"plot!(y, handle=2)","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"will append a curve to the figure with handle 2.","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Gnuplot provides basic mouse interaction for graphical terminals, like zooming and annotating coordinates. This only works on the active figure, which is either the last figure plotted, or the one selected with a figure(h) command. Continuing the previous example, the plot! command made 2 the active figure. If mouse interactivity were desired in figure 3, then we'd need to run figure(3) to make it active.","category":"page"},{"location":"notes/#How-does-Gaston-handle-missing-x-values?-1","page":"Usage Notes and FAQ","title":"How does Gaston handle missing x values?","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"If only one vector y is given, then its indices are used for the x axis.","category":"page"},{"location":"notes/#I-run-plot-inside-a-for-loop-and-no-plots-are-produced!-(or:-Julia's-display-system)-1","page":"Usage Notes and FAQ","title":"I run plot inside a for loop and no plots are produced! (or: Julia's display system)","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Julia separates the calculation of a result from the display of the result (see custom pretty-printing and multimedia I/O in Julia's documentation). This mechanism is very powerful; in Gaston, it enables plotting to the REPL, Jupyter, Juno, or in Documenter.jl with just a few lines of code. In other words, plotting is not a side effect of running plot, the way it is in, say, Matlab; rather, a plot is produced when a result of type Gaston.Figure is returned by some code.","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"While elegant and powerful, this mechanism can also be surprising if you're used to side-effect plotting. None of the following code samples display any plots:","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"y = rand(20)\nplot(y);  # note the final ; suppreses displaying the result","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"# nothing is returned by the for loop\nfor k = 1:5\n    plot(k*y)\nend","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"# function that does not return a figure\nfunction f(y)\n    plot(sin.(y))\n    println(\"Sum = $(sum(y))\")\nend","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"The common problem in the code samples above is that a figure is never returned; in consequence, no figure is displayed. This can be fixed by making sure your code returns a figure; or alternatively, save the figure in a variable and display it when it is convenient. For example:","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"p = Gaston.Figure[]\nfor k = 1:5\n    push!(p, plot(k*y))\nend","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Now, p[3] returns the third plot (for example). Another way to force the figure to be rendered is to call display():","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"# all five figures are displayed\ncloseall()\nfor k = 1:5\n    figure()\n    display(plot(k*y))\nend","category":"page"},{"location":"notes/#How-to-set-the-tics-1","page":"Usage Notes and FAQ","title":"How to set the tics","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Gnuplot's tics functionality is flexible and somewhat complex, and I haven't yet found the best way to expose it. For the moment, tics can be set using the gpcom plot argument; see an example here: Bar plots.","category":"page"},{"location":"notes/#Error-handling-1","page":"Usage Notes and FAQ","title":"Error handling","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Gnuplot's main drawback, from a usability standpoint, is that it is not a library; it is designed to be used interactively. Gaston simulates a user typing interactive commands in a gnuplot session. Gaston goes to some lengths to prevent providing gnuplot with invalid inputs; however, preventing this completely would require re-implementing gnuplot's parser in Gaston.","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"An example of an error caught by Gaston:","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"julia> y = rand(20)\njulia> plot(y,plotstyle=\"linepoints\")  # missing an 's'\n\nERROR: DomainError with linepoints:\nsupported 2-D plotstyles are: [\"\", \"lines\", \"linespoints\", \"points\", \"impulses\", \"boxes\", \"errorlines\", \"errorbars\", \"dots\", \"steps\", \"fsteps\", \"fillsteps\", \"financebars\"]","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"An example of an error returned by gnuplot:","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"julia> plot(y,linecolor=\"thecolorofsunset\")\nâ”Œ Warning: Gnuplot returned an error message:\nâ”‚\nâ”‚ gnuplot> plot '/tmp/gaston-cX8CoMqR-10'  i 0 lc rgb 'thecolorofsunset' lw 1\nâ”‚                                                                        ^\nâ”‚          line 0: unrecognized color name and not a string \"#AARRGGBB\" or \"0xAARRGGBB\"\nâ”‚\nâ”‚ )\nâ”” @ Gaston gaston_llplot.jl:199","category":"page"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Gaston does its best effort to read and display any warnings or errors produced by gnuplot, and to recover gracefully. In some corner cases, it might happen that the communication link enters an unforeseen state and a restart is required. Please file a Gaston issue if you experience this.","category":"page"},{"location":"notes/#What-is-Gaston's-roadmap?-1","page":"Usage Notes and FAQ","title":"What is Gaston's roadmap?","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Modernize its syntax, using Plots.jl and MakiE as inspiration.\nSupport for exporting to TiKZ and/or PGFPlots.\nExpose more of gnuplot's functionality: tics, quiver plots, etc...","category":"page"},{"location":"notes/#Contributing-1","page":"Usage Notes and FAQ","title":"Contributing","text":"","category":"section"},{"location":"notes/#","page":"Usage Notes and FAQ","title":"Usage Notes and FAQ","text":"Issues and pull requests are welcome at Gaston's github page","category":"page"}]
}
